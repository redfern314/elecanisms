import os

env = Environment(tools = ['gcc', 'gnulink', 'ar', 'zip'], 
                  PIC = '24FJ128GB206', 
                  CC = 'xc16-gcc', 
                  PROGSUFFIX = '.cof', 
                  CFLAGS = '-g -omf=coff -x c -mcpu=$PIC', 
                  LINKFLAGS = '-omf=coff -mcpu=$PIC -Wl,--script="app_p24FJ128GB206.gld"', 
                  CPPPATH = '../lib')

if os.name == "nt":
  print("scons: Windows system detected")
  env.PrependENVPath('PATH', 'C:\\Program Files (x86)\\Microchip\\xc16\\v1.24\\bin')
elif os.name == "posix":
  print("scons: Linux system detected")
  env.PrependENVPath('PATH', '/opt/microchip/xc16/v1.22/bin')
else:
  print("scons: OS not recognized - check the SConstruct file.")
  exit()

bin2hex = Builder(action = 'xc16-bin2hex $SOURCE -omf=coff',
                  suffix = 'hex', 
                  src_suffix = 'cof')
env.Append(BUILDERS = {'Hex' : bin2hex})
list = Builder(action = 'xc16-objdump -S -D -omf=coff $SOURCE > $TARGET', 
               suffix = 'lst', 
               src_suffix = 'cof')
env.Append(BUILDERS = {'List' : list})

env.Program('motorcontroller', ['motorcontroller.c',
                      '../lib/timer.c',
                      '../lib/ui.c',
                      '../lib/pin.c',
                      '../lib/oc.c'])
env.Hex('motorcontroller')
env.List('motorcontroller')